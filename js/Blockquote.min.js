/* Social Blockquote */
/*
 * Original Comment: Social Blockquote
 * This script finds specific blockquote elements on a page,
 * wraps them with a new structure, and adds social sharing buttons,
 * a copy button, and a download button.
 */

// Helper function to save text content as a file
const saveDoc = (content, fileName, contentType) => {
    // Set default content type if not provided
    if (typeof contentType === 'undefined') {
        contentType = 'text/plain';
    }
    // Set default file name if not provided
    if (typeof fileName === 'undefined') {
        fileName = 'File_' + (new Date).getTime() + '.txt';
    }

    if (content) {
        const blob = new Blob([content], {
            type: contentType
        });

        // For IE 10+
        if (navigator.msSaveBlob) {
            return navigator.msSaveBlob(blob, fileName);
        }

        // For other browsers
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement("a");
        link.classList.add("hidden"); // Assuming addCt is a class-adding helper
        link.href = url;
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        link.remove();
        window.URL.revokeObjectURL(url);
    }
};

// Find all designated blockquotes and enhance them with share buttons.
// It looks for elements matching `blockquote.pu_blq`.
const quoteElements = document.querySelectorAll("blockquote.pu_blq");

for (let i = 0; i < quoteElements.length; i++) {
    const originalBlockquote = quoteElements[i];
    const quoteText = originalBlockquote.innerText;
    const originalHtml = originalBlockquote.outerHTML;

    // The author is expected to be in a data attribute, e.g., <blockquote data-author="John Doe">
    const author = originalBlockquote.dataset.author;

    // Construct the URL of the current page
    const pageUrl = "https://" + window.location.hostname + window.location.pathname;

    // Prepare text components for sharing links, ensuring they are URL-encoded
    const encodedQuote = encodeURIComponent(quoteText).replace(/'/g, "&#039;").replace(/"/g, "&quot;");
    const encodedAuthor = encodeURIComponent(typeof author === 'undefined' ? "" : "\nSaid by: " + author).replace(/'/g, "&#039;").replace(/"/g, "&quot;");
    const encodedReadMore = encodeURIComponent("\nRead more quotes at: " + pageUrl).replace(/'/g, "&#039;").replace(/"/g, "&quot;");
    const encodedPageUrl = encodeURIComponent(pageUrl).replace(/'/g, "&#039;").replace(/"/g, "&quot;");

    // Combine text for services that use a single text parameter
    const combinedText = encodedQuote.concat(encodedAuthor, encodedReadMore);

    // Build the new HTML structure with all the share buttons and their SVGs
    const newHtml = `
      <div class='fd-blq fd_blqt'>
        <div class='blq-con'>
          ${originalHtml}
        </div>
        <div class='blq-shr'>
          <!-- Whatsapp -->
          <a class='btn shr-wa' href='https://api.whatsapp.com/send?text=*${encodedQuote}*${encodedAuthor}${encodedReadMore}' target='_blank'>
            <svg viewBox='0 0 64 64'>
              <path d='M6.9,48.4c-0.4,1.5-0.8,3.3-1.3,5.2c-0.7,2.9,1.9,5.6,4.8,4.8l5.1-1.3c1.7-0.4,3.5-0.2,5.1,0.5 c4.7,2.1,10,3,15.6,2.1c12.3-1.9,22-11.9,23.5-24.2C62,17.3,46.7,2,28.5,4.2C16.2,5.7,6.2,15.5,4.3,27.8c-0.8,5.6,0,10.9,2.1,15.6 C7.1,44.9,7.3,46.7,6.9,48.4z M21.3,19.8c0.6-0.5,1.4-0.9,1.8-0.9s2.3-0.2,2.9,1.2c0.6,1.4,2,4.7,2.1,5.1c0.2,0.3,0.3,0.7,0.1,1.2 c-0.2,0.5-0.3,0.7-0.7,1.1c-0.3,0.4-0.7,0.9-1,1.2c-0.3,0.3-0.7,0.7-0.3,1.4c0.4,0.7,1.8,2.9,3.8,4.7c2.6,2.3,4.9,3,5.5,3.4 c0.7,0.3,1.1,0.3,1.5-0.2c0.4-0.5,1.7-2,2.2-2.7c0.5-0.7,0.9-0.6,1.6-0.3c0.6,0.2,4,1.9,4.7,2.2c0.7,0.3,1.1,0.5,1.3,0.8 c0.2,0.3,0.2,1.7-0.4,3.2c-0.6,1.6-2.1,3.1-3.2,3.5c-1.3,0.5-2.8,0.7-9.3-1.9c-7-2.8-11.8-9.8-12.1-10.3c-0.3-0.5-2.8-3.7-2.8-7.1 C18.9,22.1,20.7,20.4,21.3,19.8z'></path>
            </svg>
          </a>
          <!-- Facebook -->
          <a class='btn shr-fb' href='https://www.facebook.com/sharer.php?u=${encodedPageUrl}&t=${encodeURIComponent(document.title)}' target='_blank'>
            <svg viewBox='0 0 24 24'>
              <path d='M12 2.04C6.5 2.04 2 6.53 2 12.06C2 17.06 5.66 21.21 10.44 21.96V14.96H7.9V12.06H10.44V9.85C10.44 7.34 11.93 5.96 14.22 5.96C15.31 5.96 16.45 6.15 16.45 6.15V8.62H15.19C13.95 8.62 13.56 9.39 13.56 10.18V12.06H16.34L15.89 14.96H13.56V21.96A10 10 0 0 0 22 12.06C22 6.53 17.5 2.04 12 2.04Z'/>
            </svg>
          </a>
          <!-- X (Twitter) -->
          <a class='btn shr-tw' href='https://twitter.com/intent/tweet?hashtags=quotes%2C${encodeURIComponent(document.title.replace(/ /g,"").replace(/-/g,""))}&text=${combinedText}' target='_blank'>
            <svg viewBox='0 0 24 24'>
              <path d='M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z'/>
            </svg>
          </a>
          <!-- Telegram -->
          <a class='btn shr-tg' href='https://telegram.me/share/url?url=${encodedPageUrl}&text=%0A**${encodedQuote}**%0A${encodedAuthor}' target='_blank'>
            <svg viewBox='0 0 64 64'>
              <path d='M56.4,8.2l-51.2,20c-1.7,0.6-1.6,3,0.1,3.5l9.7,2.9c2.1,0.6,3.8,2.2,4.4,4.3l3.8,12.1c0.5,1.6,2.5,2.1,3.7,0.9 l5.2-5.3c0.9-0.9,2.2-1,3.2-0.3l11.5,8.4c1.6,1.2,3.9,0.3,4.3-1.7l8.7-41.8C60.4,9.1,58.4,7.4,56.4,8.2z M50,17.4L29.4,35.6 c-1.1,1-1.9,2.4-2,3.9c-0.2,1.5-2.3,1.7-2.8,0.3l-0.9-3c-0.7-2.2,0.2-4.5,2.1-5.7l23.5-14.6C49.9,16.1,50.5,16.9,50,17.4z'></path>
            </svg>
          </a>
          <!-- Download -->
          <button class='btn btn-dl'>
            <svg viewBox='0 0 24 24'>
              <path class='svg1' d='M12 2C17.5 2 22 6.5 22 12C22 17.5 17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2M8 17H16V15H8V17M16 10H13.5V6H10.5V10H8L12 14L16 10Z'/>
              <path class='svg2' d='M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z'/>
            </svg>
          </button>
          <!-- Copy -->
          <button class='btn btn-cp'>
            <svg viewBox='0 0 24 24'>
              <path class='svg1' d='M22,16A2,2 0 0,1 20,18H8C6.89,18 6,17.1 6,16V4C6,2.89 6.89,2 8,2H20A2,2 0 0,1 22,4V16M16,20V22H4A2,2 0 0,1 2,20V7H4V20H16Z'/>
              <path class='svg2' d='M22,16A2,2 0 0,1 20,18H8C6.89,18 6,17.1 6,16V4C6,2.89 6.89,2 8,2H20A2,2 0 0,1 22,4V16M16,20V22H4A2,2 0 0,1 2,20V7H4V20H16M13,14L20,7L18.59,5.59L13,11.17L9.91,8.09L8.5,9.5L13,14Z'/>
            </svg>
          </button>
        </div>
      </div>`;

    // Replace the original blockquote with the new, enhanced version
    originalBlockquote.outerHTML = newHtml;
}

// Find all the newly created quote containers and add event listeners to their buttons.
const newQuoteContainers = document.querySelectorAll(".fd_blqt");

for (let i = 0; i < newQuoteContainers.length; i++) {
    const container = newQuoteContainers[i];
    const copyButton = container.querySelector(".btn-cp");
    const downloadButton = container.querySelector(".btn-dl");
    const blockquoteToCopy = container.querySelector("blockquote");

    // Add click listener for the Copy button
    copyButton.addEventListener("click", () => {
        copyButton.disabled = true;

        const selection = window.getSelection();
        const range = document.createRange();
        range.selectNodeContents(blockquoteToCopy);
        selection.removeAllRanges();
        selection.addRange(range);

        // Copy selected text to clipboard
        document.execCommand("copy");

        // Clear the selection
        selection.removeAllRanges();

        // Provide visual feedback (e.g., change icon)
        container.classList.add('cpd'); // 'cpd' likely means "copied"
        setTimeout(() => {
            container.classList.remove('cpd');
            copyButton.disabled = false;
        }, 3000); // Revert after 3 seconds
    });

    // Add click listener for the Download button
    downloadButton.addEventListener("click", () => {
        downloadButton.disabled = true;

        // Use the saveDoc helper to download the text
        saveDoc(container.innerText, `Quote_${i + 1}.txt`, "text/plain");

        // Provide visual feedback
        container.classList.add('dwn'); // 'dwn' likely means "downloaded"
        setTimeout(() => {
            container.classList.remove('dwn');
            downloadButton.disabled = false;
        }, 3000); // Revert after 3 seconds
    });
}
